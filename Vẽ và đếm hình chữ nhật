#include <bits/stdc++.h>
using namespace std;
char a[1000][1000];
bool vis[1000][1000];
int vt[4][2]={{1,0},{-1,0},{0,1},{0,-1}};
int n,m;
bool ok(int x,int y){
    return 1<=x && x<=n && 1<=y && y<=m;
}
void bfs(int x,int y){
    deque< pair<int,int> > q;
    q.push_back({x,y});
    vis[x][y]=true;
    while (!q.empty()){
        pair<int,int> u = q.front();
        q.pop_front();
        for (int i=0; i<=3; i++){
            int t1=u.first + vt[i][0];
            int t2=u.second + vt[i][1];
            if (ok(t1,t2) && vis[t1][t2]==false) 
            if (a[t1][t2]=='*') {
                vis[t1][t2] = true;
                q.push_back({t1,t2});
            }
        }
    }
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL); 
    cin>>n>>m;
    for (int i=1; i<=n; i++)
    for (int j=1; j<=m; j++) cin>>a[i][j];
    int count = 0;
    for (int i=1; i<=n; i++)
    for (int j=1; j<=m; j++)
    if (a[i][j]=='*' && vis[i][j]==false) {
        count++;
        bfs(i,j);
    }
    cout<<count;
}
