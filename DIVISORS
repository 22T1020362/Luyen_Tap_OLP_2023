#include <bits/stdc++.h>
#define taskname "B"
using namespace std;

typedef unsigned long long ull;
const int N = 431;

void Input() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    if (fopen(taskname".inp", "r")) {
        freopen(taskname".inp", "r", stdin);
        freopen(taskname".out", "w", stdout);
    }
}
bool isPrime(int x) {
    if (x <= 1) return false;
    for (int i = 2; i <= sqrt(x); i++)
        if (x % i == 0) return false;
    return true;
}
ull count(int n, int k) {
    ull cnt = 0;
    for (int i = k; i <= n; i *= k)
        cnt += n / i;
    return cnt;
}
void Solve() {
    vector<int> prime;
    for (int i = 2; i <= N; i++)
        if (isPrime(i)) prime.push_back(i);
    
    int n, k;
    while (cin >> n >> k) {
        vector<ull> cnt(prime.size());
        for (int i = 0; i < prime.size(); i++) {
            cnt[i] += count(n, prime[i]);
            cnt[i] -= count(n - k, prime[i]);
            cnt[i] -= count(k, prime[i]);
        }

        ull ans = 1;
        for (int i = 0; i < prime.size(); i++)
            ans *= (cnt[i] + 1);
        
        cout << ans << "\n";
    }
}

int main(){
    Input();
    Solve();
    return 0;
}
